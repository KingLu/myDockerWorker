# docker run -d -p 8000:8000 alseambusher/crontab-ui
#docker build -t u2509/webcron-ui:alpine-3.16.20220707 .
FROM python:3.10.5-alpine3.16

ENV   CRON_PATH /etc/crontabs

RUN   mkdir /crontab-ui; touch $CRON_PATH/root; chmod +x $CRON_PATH/root

WORKDIR /crontab-ui

LABEL maintainer "@alseambusher"
LABEL description "Crontab-UI docker"

RUN   apk --no-cache add \
      wget \
      curl \
      nodejs \
      npm \
      supervisor \
      tzdata 

COPY supervisord.conf /etc/supervisord.conf
COPY . /crontab-ui

RUN   npm install

# Install pandas numpy
RUN apk add --update --no-cache  g++ 
RUN pip3 install --no-cache --upgrade pandas numpy 

RUN apk add --update --no-cache mysql-client && rm -f /var/cache/apk/*
RUN apk add --update --no-cache vim bash bash-doc bash-completion iputils busybox-extras && rm -f /var/cache/apk/*

## 安装火狐
RUN apk add --update --no-cache unzip dbus-x11 ttf-freefont firefox-esr xvfb && rm -f /var/cache/apk/*


#============
# GeckoDriver
#============
ARG GECKODRIVER_VERSION=latest
RUN GK_VERSION=$(if [ ${GECKODRIVER_VERSION:-latest} = "latest" ]; then echo "0.30.0"; else echo $GECKODRIVER_VERSION; fi) \
  && echo "Using GeckoDriver version: "$GK_VERSION \
  && wget --no-verbose -O /tmp/geckodriver.tar.gz https://github.com/mozilla/geckodriver/releases/download/v$GK_VERSION/geckodriver-v$GK_VERSION-linux64.tar.gz \
  && rm -rf /opt/geckodriver \
  && tar -C /opt -zxf /tmp/geckodriver.tar.gz \
  && rm /tmp/geckodriver.tar.gz \
  && mv /opt/geckodriver /opt/geckodriver-$GK_VERSION \
  && chmod 755 /opt/geckodriver-$GK_VERSION \
  && ln -fs /opt/geckodriver-$GK_VERSION /usr/bin/geckodriver


RUN pip3 install --no-cache --upgrade selenium 


ENV   HOST 0.0.0.0

ENV   PORT 8000

ENV   CRON_IN_DOCKER true

EXPOSE $PORT

CMD ["supervisord", "-c", "/etc/supervisord.conf"]
